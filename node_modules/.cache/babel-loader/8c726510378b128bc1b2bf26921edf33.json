{"ast":null,"code":"var _jsxFileName = \"/Users/macos/Desktop/WorkSpace/ToDoList/TodoList-app/src/components/TodoAdd.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport TodoEdit from './TodoEdit';\nimport TodoDelete from './TodoDelete';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TodoApp() {\n  _s();\n\n  const [jobAdd, setJobAdd] = useState([]); // danh sach cong viec(neu local ko luu thi tra ve mang rong)\n  // toan tu nulllist\n\n  const [jobsAdd, setJobsAdd] = useState([]);\n  const [indexOfJobEdit, setIndexOfJobEdit] = useState(null);\n\n  const handleSubmit = () => {\n    // lấy ra mang setJobs \n    //để bảo lưu những job trong tương lai khi mà thêm job mới\n    // console.log(indexOfJobEdit)\n    if (indexOfJobEdit !== null) {\n      let newJobsAdd = jobs.map((value, index) => {\n        if (index === indexOfJobEdit) {\n          return value = job;\n        }\n\n        return value;\n      });\n      setIndexOfJobEdit(null);\n      setJobs([...newJobs]);\n    } else {\n      setJobs([...jobs, job]);\n    }\n\n    setJobs(jobs => {\n      // const newJobs = [...jobs,job];\n      localStorage.setItem('jobs', JSON.stringify(jobs)); // return newJobs;\n    }); // prev bảo lưu, job là cv mới\n    // sau khi setjob thì lại trả về mảng rỗng cho input\n\n    setJob(''); // input1.current.focus();\n  };\n\n  const handleOnKeyDown = event => {\n    // console.log(event)\n    // console.log(indexOfJobEdit,1)\n    if (event.key === 'Enter') {\n      handleSubmit();\n    }\n  };\n\n  useEffect(() => {\n    const jobs = localStorage.getItem('jobs') || \"[]\";\n\n    try {\n      const parsedJobs = JSON.parse(jobs); // Array.isArray ham xac dinh kieu cuar bien co phai mang hay ko\n      // ham .length de xac dinh so luong phan tu trong mang\n\n      if (!Array.isArray(parsedJobs) || parsedJobs.length === 0) {\n        return;\n      }\n\n      setJobs(parsedJobs);\n    } catch (error) {\n      console.log('error', error);\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"TodoApp\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      // ref={input1} \n      type: \"text\",\n      name: \"Add\",\n      placeholder: \"Add\",\n      onKeyDown: handleOnKeyDown,\n      value: job // event goi setJob\n      ,\n      onChange: e => setJob(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmit,\n      children: \"ADD\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n}\n\n_s(TodoApp, \"YeuRV7Yaz9OyHZyJ/pfsDfxPunE=\");\n\n_c = TodoApp;\nexport default TodoApp;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoApp\");","map":{"version":3,"names":["React","useState","useEffect","TodoEdit","TodoDelete","TodoApp","jobAdd","setJobAdd","jobsAdd","setJobsAdd","indexOfJobEdit","setIndexOfJobEdit","handleSubmit","newJobsAdd","jobs","map","value","index","job","setJobs","newJobs","localStorage","setItem","JSON","stringify","setJob","handleOnKeyDown","event","key","getItem","parsedJobs","parse","Array","isArray","length","error","console","log","e","target"],"sources":["/Users/macos/Desktop/WorkSpace/ToDoList/TodoList-app/src/components/TodoAdd.js"],"sourcesContent":["import React, { useState, useEffect} from 'react';\nimport TodoEdit from './TodoEdit';\nimport TodoDelete from './TodoDelete';\n\nfunction TodoApp (){\n    const [jobAdd, setJobAdd] = useState([]);\n  // danh sach cong viec(neu local ko luu thi tra ve mang rong)\n  // toan tu nulllist\n  const [jobsAdd, setJobsAdd] = useState([]);\n  const [indexOfJobEdit, setIndexOfJobEdit] = useState(null);\n  const handleSubmit = () => {\n    // lấy ra mang setJobs \n    //để bảo lưu những job trong tương lai khi mà thêm job mới\n    // console.log(indexOfJobEdit)\n    if(indexOfJobEdit !== null) {\n      let newJobsAdd = jobs.map((value,index) => {\n        if(index === indexOfJobEdit) {\n          return value = job;\n        }\n        return value\n      })\n      setIndexOfJobEdit(null)\n      setJobs([...newJobs])\n    }else {\n      setJobs([...jobs, job])\n\n    }\n        setJobs( jobs => { \n      // const newJobs = [...jobs,job];\n      \n      localStorage.setItem('jobs', JSON.stringify(jobs));\n      // return newJobs;\n        })\n    // prev bảo lưu, job là cv mới\n    // sau khi setjob thì lại trả về mảng rỗng cho input\n    setJob('')\n    // input1.current.focus();\n    }\n    const handleOnKeyDown = (event) => {\n        // console.log(event)\n        // console.log(indexOfJobEdit,1)\n        if (event.key === 'Enter') {\n          handleSubmit();\n        }\n    }\n\n    useEffect(() => {\n        const jobs = localStorage.getItem('jobs') || \"[]\";\n    \n        try {\n          const parsedJobs = JSON.parse(jobs);\n          // Array.isArray ham xac dinh kieu cuar bien co phai mang hay ko\n          // ham .length de xac dinh so luong phan tu trong mang\n          if (!Array.isArray(parsedJobs) || parsedJobs.length === 0) {\n            return;\n          }\n          setJobs(parsedJobs)\n        } catch (error) {\n          console.log('error', error);\n        }\n      }, [])\n      return (\n        <div className=\"TodoApp\" >\n          {/* sd two-way binding */}\n          <input\n            // ref={input1} \n            type=\"text\" \n            name=\"Add\" \n            placeholder=\"Add\"\n            onKeyDown={handleOnKeyDown}\n            value={job}\n            // event goi setJob\n            onChange={e => setJob(e.target.value)}\n          />\n          <button onClick={handleSubmit}>ADD</button>\n          \n        </div>\n  );\n}\n\nexport default TodoApp;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA0C,OAA1C;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,UAAP,MAAuB,cAAvB;;;AAEA,SAASC,OAAT,GAAmB;EAAA;;EACf,MAAM,CAACC,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC,EAAD,CAApC,CADe,CAEjB;EACA;;EACA,MAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,EAAD,CAAtC;EACA,MAAM,CAACS,cAAD,EAAiBC,iBAAjB,IAAsCV,QAAQ,CAAC,IAAD,CAApD;;EACA,MAAMW,YAAY,GAAG,MAAM;IACzB;IACA;IACA;IACA,IAAGF,cAAc,KAAK,IAAtB,EAA4B;MAC1B,IAAIG,UAAU,GAAGC,IAAI,CAACC,GAAL,CAAS,CAACC,KAAD,EAAOC,KAAP,KAAiB;QACzC,IAAGA,KAAK,KAAKP,cAAb,EAA6B;UAC3B,OAAOM,KAAK,GAAGE,GAAf;QACD;;QACD,OAAOF,KAAP;MACD,CALgB,CAAjB;MAMAL,iBAAiB,CAAC,IAAD,CAAjB;MACAQ,OAAO,CAAC,CAAC,GAAGC,OAAJ,CAAD,CAAP;IACD,CATD,MASM;MACJD,OAAO,CAAC,CAAC,GAAGL,IAAJ,EAAUI,GAAV,CAAD,CAAP;IAED;;IACGC,OAAO,CAAEL,IAAI,IAAI;MACnB;MAEAO,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BC,IAAI,CAACC,SAAL,CAAeV,IAAf,CAA7B,EAHmB,CAInB;IACG,CALM,CAAP,CAjBqB,CAuBzB;IACA;;IACAW,MAAM,CAAC,EAAD,CAAN,CAzByB,CA0BzB;EACC,CA3BH;;EA4BE,MAAMC,eAAe,GAAIC,KAAD,IAAW;IAC/B;IACA;IACA,IAAIA,KAAK,CAACC,GAAN,KAAc,OAAlB,EAA2B;MACzBhB,YAAY;IACb;EACJ,CAND;;EAQAV,SAAS,CAAC,MAAM;IACZ,MAAMY,IAAI,GAAGO,YAAY,CAACQ,OAAb,CAAqB,MAArB,KAAgC,IAA7C;;IAEA,IAAI;MACF,MAAMC,UAAU,GAAGP,IAAI,CAACQ,KAAL,CAAWjB,IAAX,CAAnB,CADE,CAEF;MACA;;MACA,IAAI,CAACkB,KAAK,CAACC,OAAN,CAAcH,UAAd,CAAD,IAA8BA,UAAU,CAACI,MAAX,KAAsB,CAAxD,EAA2D;QACzD;MACD;;MACDf,OAAO,CAACW,UAAD,CAAP;IACD,CARD,CAQE,OAAOK,KAAP,EAAc;MACdC,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBF,KAArB;IACD;EACF,CAdM,EAcJ,EAdI,CAAT;EAeE,oBACE;IAAK,SAAS,EAAC,SAAf;IAAA,wBAEE;MACE;MACA,IAAI,EAAC,MAFP;MAGE,IAAI,EAAC,KAHP;MAIE,WAAW,EAAC,KAJd;MAKE,SAAS,EAAET,eALb;MAME,KAAK,EAAER,GANT,CAOE;MAPF;MAQE,QAAQ,EAAEoB,CAAC,IAAIb,MAAM,CAACa,CAAC,CAACC,MAAF,CAASvB,KAAV;IARvB;MAAA;MAAA;MAAA;IAAA,QAFF,eAYE;MAAQ,OAAO,EAAEJ,YAAjB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAZF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAiBL;;GA1EQP,O;;KAAAA,O;AA4ET,eAAeA,OAAf"},"metadata":{},"sourceType":"module"}