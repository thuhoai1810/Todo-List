{"ast":null,"code":"// import React, { useState, useEffect, useRef} from 'react';\n// // import App from '../App';\n// // import TodoEdit from './TodoEdit';\n// // import TodoDelete from './TodoDelete';\n// function TodoApp (props){\n//     const [job,setJob] = useState(props.edit ? props.edit.value : '');\n//   // danh sach cong viec(neu local ko luu thi tra ve mang rong)\n//   // toan tu nulllist\n//   const [jobs,setJobs] = useState([]);\n//   const inputRef = useRef();\n//   // const [indexOfJobEdit, setIndexOfJobEdit] = useState(null);\n//   const handleSubmit = () => {\n//     // lấy ra mang setJobs \n//     //để bảo lưu những job trong tương lai khi mà thêm job mới\n//     // console.log(indexOfJobEdit)\n//       setJobs( ...jobs => { \n//       const newJobs = [...jobs,job];\n//       localStorage.setItem('jobs', JSON.stringify(newJobs));\n//       return newJobs;\n//       })\n//       // prev bảo lưu, job là cv mới\n//       // sau khi setjob thì lại trả về mảng rỗng cho input\n//       setJob('')\n//     }\n//     const handleOnKeyDown = (event) => {\n//         // console.log(event)\n//         // console.log(indexOfJobEdit,1)\n//         if (event.key === 'Enter') {\n//           handleSubmit();\n//         }\n//     }\n//     const handleChange = (e) => {\n//       setJob(e.target.value);\n//     };\n//     useEffect(() => {\n//         const jobs = localStorage.getItem('jobs') || \"[]\";\n//         try {\n//           const parsedJobs = JSON.parse(jobs);\n//           // Array.isArray ham xac dinh kieu cuar bien co phai mang hay ko\n//           // ham .length de xac dinh so luong phan tu trong mang\n//           if (!Array.isArray(parsedJobs) || parsedJobs.length === 0) {\n//             return;\n//           }\n//           setJobs(parsedJobs)\n//         } catch (error) {\n//           console.log('error', error);\n//         }\n//       }, [])\n//       useEffect(() => {\n//         inputRef.current.focus();\n//       });\n//       return (\n//         <form className=\"TodoApp\" >\n//           {\n//             props.edit ? props.edit.value (\n//               <div>\n//                 <input\n//                   // ref={input1} \n//                   type=\"text\" \n//                   name=\"text\" \n//                   placeholder=\"update\"\n//                   onKeyDown={handleOnKeyDown}\n//                   value={job}\n//                   // event goi setJob\n//                   onChange={handleChange}\n//                 />\n//                 <button onClick={handleSubmit}>Update</button>\n//               </div>\n//              ):(\n//               <div>\n//                 <input\n//                   // ref={input1} \n//                   type=\"text\" \n//                   name=\"text\" \n//                   placeholder=\"add\"\n//                   onKeyDown={handleOnKeyDown}\n//                   value={job}\n//                   // event goi setJob\n//                   onChange={handleChange}\n//                 />\n//                 <button onClick={handleSubmit}>Add</button>\n//               </div>\n//              )\n//            }\n//         </form>\n//   );\n// }\n// export default TodoApp;","map":{"version":3,"names":[],"sources":["/Users/macos/Desktop/WorkSpace/ToDoList/TodoList-app/src/components/TodoAdd.js"],"sourcesContent":["// import React, { useState, useEffect, useRef} from 'react';\n// // import App from '../App';\n// // import TodoEdit from './TodoEdit';\n// // import TodoDelete from './TodoDelete';\n\n// function TodoApp (props){\n//     const [job,setJob] = useState(props.edit ? props.edit.value : '');\n//   // danh sach cong viec(neu local ko luu thi tra ve mang rong)\n//   // toan tu nulllist\n//   const [jobs,setJobs] = useState([]);\n//   const inputRef = useRef();\n//   // const [indexOfJobEdit, setIndexOfJobEdit] = useState(null);\n//   const handleSubmit = () => {\n//     // lấy ra mang setJobs \n//     //để bảo lưu những job trong tương lai khi mà thêm job mới\n//     // console.log(indexOfJobEdit)\n//       setJobs( ...jobs => { \n//       const newJobs = [...jobs,job];\n//       localStorage.setItem('jobs', JSON.stringify(newJobs));\n//       return newJobs;\n//       })\n//       // prev bảo lưu, job là cv mới\n//       // sau khi setjob thì lại trả về mảng rỗng cho input\n//       setJob('')\n//     }\n//     const handleOnKeyDown = (event) => {\n//         // console.log(event)\n//         // console.log(indexOfJobEdit,1)\n//         if (event.key === 'Enter') {\n//           handleSubmit();\n//         }\n//     }\n//     const handleChange = (e) => {\n//       setJob(e.target.value);\n//     };\n//     useEffect(() => {\n//         const jobs = localStorage.getItem('jobs') || \"[]\";\n    \n//         try {\n//           const parsedJobs = JSON.parse(jobs);\n//           // Array.isArray ham xac dinh kieu cuar bien co phai mang hay ko\n//           // ham .length de xac dinh so luong phan tu trong mang\n//           if (!Array.isArray(parsedJobs) || parsedJobs.length === 0) {\n//             return;\n//           }\n//           setJobs(parsedJobs)\n//         } catch (error) {\n//           console.log('error', error);\n//         }\n//       }, [])\n\n//       useEffect(() => {\n//         inputRef.current.focus();\n//       });\n    \n//       return (\n//         <form className=\"TodoApp\" >\n//           {\n//             props.edit ? props.edit.value (\n//               <div>\n//                 <input\n//                   // ref={input1} \n//                   type=\"text\" \n//                   name=\"text\" \n//                   placeholder=\"update\"\n//                   onKeyDown={handleOnKeyDown}\n//                   value={job}\n//                   // event goi setJob\n//                   onChange={handleChange}\n//                 />\n//                 <button onClick={handleSubmit}>Update</button>\n//               </div>\n//              ):(\n//               <div>\n//                 <input\n//                   // ref={input1} \n//                   type=\"text\" \n//                   name=\"text\" \n//                   placeholder=\"add\"\n//                   onKeyDown={handleOnKeyDown}\n//                   value={job}\n//                   // event goi setJob\n//                   onChange={handleChange}\n//                 />\n//                 <button onClick={handleSubmit}>Add</button>\n//               </div>\n//              )\n//            }\n//         </form>\n//   );\n// }\n\n// export default TodoApp;"],"mappings":"AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA"},"metadata":{},"sourceType":"module"}