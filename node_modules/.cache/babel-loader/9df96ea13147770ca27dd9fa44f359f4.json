{"ast":null,"code":"var _jsxFileName = \"/Users/macos/Desktop/WorkSpace/ToDoList/TodoList-app/src/components/TodoAdd.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react'; // import App from '../App';\n// import TodoEdit from './TodoEdit';\n// import TodoDelete from './TodoDelete';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TodoApp() {\n  _s();\n\n  const [job, setJob] = useState([]); // danh sach cong viec(neu local ko luu thi tra ve mang rong)\n  // toan tu nulllist\n\n  const [jobs, setJobs] = useState([]);\n  const inputRef = useR; // const [indexOfJobEdit, setIndexOfJobEdit] = useState(null);\n\n  const handleSubmit = () => {\n    // lấy ra mang setJobs \n    //để bảo lưu những job trong tương lai khi mà thêm job mới\n    // console.log(indexOfJobEdit)\n    setJobs(prve => {\n      const newJobs = [...prve, job];\n      localStorage.setItem('jobs', JSON.stringify(newJobs));\n      return newJobs;\n    }); // prev bảo lưu, job là cv mới\n    // sau khi setjob thì lại trả về mảng rỗng cho input\n\n    setJob('');\n  };\n\n  const handleOnKeyDown = event => {\n    // console.log(event)\n    // console.log(indexOfJobEdit,1)\n    if (event.key === 'Enter') {\n      handleSubmit();\n    }\n  };\n\n  useEffect(() => {\n    const jobs = localStorage.getItem('jobs') || \"[]\";\n\n    try {\n      const parsedJobs = JSON.parse(jobs); // Array.isArray ham xac dinh kieu cuar bien co phai mang hay ko\n      // ham .length de xac dinh so luong phan tu trong mang\n\n      if (!Array.isArray(parsedJobs) || parsedJobs.length === 0) {\n        return;\n      }\n\n      setJobs(parsedJobs);\n    } catch (error) {\n      console.log('error', error);\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"TodoApp\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      // ref={input1} \n      type: \"text\",\n      name: \"Add\",\n      placeholder: \"Add\",\n      onKeyDown: handleOnKeyDown,\n      value: job // event goi setJob\n      ,\n      onChange: e => setJob(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmit,\n      children: \"ADD\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: jobs.map((job, index) =>\n      /*#__PURE__*/\n      // render job lamf children cua li\n      _jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: job\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 19\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n}\n\n_s(TodoApp, \"katBvmTdiVxlK1W3+bcPsACAc/0=\");\n\n_c = TodoApp;\nexport default TodoApp;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoApp\");","map":{"version":3,"names":["React","useState","useEffect","TodoApp","job","setJob","jobs","setJobs","inputRef","useR","handleSubmit","prve","newJobs","localStorage","setItem","JSON","stringify","handleOnKeyDown","event","key","getItem","parsedJobs","parse","Array","isArray","length","error","console","log","e","target","value","map","index"],"sources":["/Users/macos/Desktop/WorkSpace/ToDoList/TodoList-app/src/components/TodoAdd.js"],"sourcesContent":["import React, { useState, useEffect} from 'react';\n// import App from '../App';\n// import TodoEdit from './TodoEdit';\n// import TodoDelete from './TodoDelete';\n\nfunction TodoApp (){\n    const [job,setJob] = useState([]);\n  // danh sach cong viec(neu local ko luu thi tra ve mang rong)\n  // toan tu nulllist\n  const [jobs,setJobs] = useState([]);\n  const inputRef = useR\n  // const [indexOfJobEdit, setIndexOfJobEdit] = useState(null);\n  const handleSubmit = () => {\n    // lấy ra mang setJobs \n    //để bảo lưu những job trong tương lai khi mà thêm job mới\n    // console.log(indexOfJobEdit)\n      setJobs( prve => { \n      const newJobs = [...prve,job];\n      localStorage.setItem('jobs', JSON.stringify(newJobs));\n      return newJobs;\n      })\n      // prev bảo lưu, job là cv mới\n      // sau khi setjob thì lại trả về mảng rỗng cho input\n      setJob('')\n    }\n    const handleOnKeyDown = (event) => {\n        // console.log(event)\n        // console.log(indexOfJobEdit,1)\n        if (event.key === 'Enter') {\n          handleSubmit();\n        }\n    }\n\n    useEffect(() => {\n        const jobs = localStorage.getItem('jobs') || \"[]\";\n    \n        try {\n          const parsedJobs = JSON.parse(jobs);\n          // Array.isArray ham xac dinh kieu cuar bien co phai mang hay ko\n          // ham .length de xac dinh so luong phan tu trong mang\n          if (!Array.isArray(parsedJobs) || parsedJobs.length === 0) {\n            return;\n          }\n          setJobs(parsedJobs)\n        } catch (error) {\n          console.log('error', error);\n        }\n      }, [])\n      return (\n        <div className=\"TodoApp\" >\n          {/* sd two-way binding */}\n          <input\n            // ref={input1} \n            type=\"text\" \n            name=\"Add\" \n            placeholder=\"Add\"\n            onKeyDown={handleOnKeyDown}\n            value={job}\n            // event goi setJob\n            onChange={e => setJob(e.target.value)}\n          />\n            <button onClick={handleSubmit}>ADD</button>\n            <ul>\n                {/* render ra the li*/}\n                {jobs.map((job, index) => (\n                  // render job lamf children cua li\n                  <li key={index}>\n                    <span>\n                      {job}\n                    </span>\n                  </li>\n                ))}\n            </ul>\n        </div>\n  );\n}\n\nexport default TodoApp;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA0C,OAA1C,C,CACA;AACA;AACA;;;;AAEA,SAASC,OAAT,GAAmB;EAAA;;EACf,MAAM,CAACC,GAAD,EAAKC,MAAL,IAAeJ,QAAQ,CAAC,EAAD,CAA7B,CADe,CAEjB;EACA;;EACA,MAAM,CAACK,IAAD,EAAMC,OAAN,IAAiBN,QAAQ,CAAC,EAAD,CAA/B;EACA,MAAMO,QAAQ,GAAGC,IAAjB,CALiB,CAMjB;;EACA,MAAMC,YAAY,GAAG,MAAM;IACzB;IACA;IACA;IACEH,OAAO,CAAEI,IAAI,IAAI;MACjB,MAAMC,OAAO,GAAG,CAAC,GAAGD,IAAJ,EAASP,GAAT,CAAhB;MACAS,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BC,IAAI,CAACC,SAAL,CAAeJ,OAAf,CAA7B;MACA,OAAOA,OAAP;IACC,CAJM,CAAP,CAJuB,CASvB;IACA;;IACAP,MAAM,CAAC,EAAD,CAAN;EACD,CAZH;;EAaE,MAAMY,eAAe,GAAIC,KAAD,IAAW;IAC/B;IACA;IACA,IAAIA,KAAK,CAACC,GAAN,KAAc,OAAlB,EAA2B;MACzBT,YAAY;IACb;EACJ,CAND;;EAQAR,SAAS,CAAC,MAAM;IACZ,MAAMI,IAAI,GAAGO,YAAY,CAACO,OAAb,CAAqB,MAArB,KAAgC,IAA7C;;IAEA,IAAI;MACF,MAAMC,UAAU,GAAGN,IAAI,CAACO,KAAL,CAAWhB,IAAX,CAAnB,CADE,CAEF;MACA;;MACA,IAAI,CAACiB,KAAK,CAACC,OAAN,CAAcH,UAAd,CAAD,IAA8BA,UAAU,CAACI,MAAX,KAAsB,CAAxD,EAA2D;QACzD;MACD;;MACDlB,OAAO,CAACc,UAAD,CAAP;IACD,CARD,CAQE,OAAOK,KAAP,EAAc;MACdC,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBF,KAArB;IACD;EACF,CAdM,EAcJ,EAdI,CAAT;EAeE,oBACE;IAAK,SAAS,EAAC,SAAf;IAAA,wBAEE;MACE;MACA,IAAI,EAAC,MAFP;MAGE,IAAI,EAAC,KAHP;MAIE,WAAW,EAAC,KAJd;MAKE,SAAS,EAAET,eALb;MAME,KAAK,EAAEb,GANT,CAOE;MAPF;MAQE,QAAQ,EAAEyB,CAAC,IAAIxB,MAAM,CAACwB,CAAC,CAACC,MAAF,CAASC,KAAV;IARvB;MAAA;MAAA;MAAA;IAAA,QAFF,eAYI;MAAQ,OAAO,EAAErB,YAAjB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAZJ,eAaI;MAAA,UAEKJ,IAAI,CAAC0B,GAAL,CAAS,CAAC5B,GAAD,EAAM6B,KAAN;MAAA;MACR;MACA;QAAA,uBACE;UAAA,UACG7B;QADH;UAAA;UAAA;UAAA;QAAA;MADF,GAAS6B,KAAT;QAAA;QAAA;QAAA;MAAA,QAFD;IAFL;MAAA;MAAA;MAAA;IAAA,QAbJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AA2BL;;GAtEQ9B,O;;KAAAA,O;AAwET,eAAeA,OAAf"},"metadata":{},"sourceType":"module"}