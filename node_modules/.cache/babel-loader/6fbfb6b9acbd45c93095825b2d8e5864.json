{"ast":null,"code":"var _jsxFileName = \"/Users/macos/Desktop/WorkSpace/ToDoList/TodoList-app/src/components/TodoEdit.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport TodoAdd from './TodoAdd';\nimport TodoDelete from './TodoDelete';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TodoEdit() {\n  _s();\n\n  const [indexOfJobEdit, setIndexOfJobEdit] = useState(null);\n\n  const handleOnFocus = (job, index) => {\n    // handlEditJob()\n    setIndexOfJobEdit(index);\n    setJob(job); // console.log(indexOfJobEdit, 2)\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: jobs.map((job, index) =>\n    /*#__PURE__*/\n    // render job lamf children cua li\n    _jsxDEV(\"li\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: job\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleOnFocus(job, index),\n        children: \" Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 15\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n}\n\n_s(TodoEdit, \"6oEwLbQ8oVGi6GCI4pneEGdyfTs=\");\n\n_c = TodoEdit;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoEdit\");","map":{"version":3,"names":["React","useState","useEffect","useRef","TodoAdd","TodoDelete","TodoEdit","indexOfJobEdit","setIndexOfJobEdit","handleOnFocus","job","index","setJob","jobs","map"],"sources":["/Users/macos/Desktop/WorkSpace/ToDoList/TodoList-app/src/components/TodoEdit.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport TodoAdd from './TodoAdd';\nimport TodoDelete from './TodoDelete';\n\nfunction TodoEdit(){\n    \n    const [indexOfJobEdit, setIndexOfJobEdit] = useState(null);\n\n    const handleOnFocus = (job, index) => {\n        // handlEditJob()\n        setIndexOfJobEdit(index)\n        setJob(job)\n        // console.log(indexOfJobEdit, 2)\n      }\n      return(\n        <ul>\n          { }\n          {/* render ra the li*/}\n          {jobs.map((job, index) => (\n            // render job lamf children cua li\n            <li key={index}>\n                <span>\n              {/* <input\n              ref ={input2}\n              name=\"Edit\" \n              placeholder=\"Edit\"\n              type=\"text\"\n             \n              value={job}\n              /> */}\n              {job}\n              </span>\n              \n              <button onClick={() => handleOnFocus(job, index)} > Edit</button>\n              \n            </li>\n  \n          ))}\n        </ul>\n      )\n}"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,QAAmD,OAAnD;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,UAAP,MAAuB,cAAvB;;;AAEA,SAASC,QAAT,GAAmB;EAAA;;EAEf,MAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCP,QAAQ,CAAC,IAAD,CAApD;;EAEA,MAAMQ,aAAa,GAAG,CAACC,GAAD,EAAMC,KAAN,KAAgB;IAClC;IACAH,iBAAiB,CAACG,KAAD,CAAjB;IACAC,MAAM,CAACF,GAAD,CAAN,CAHkC,CAIlC;EACD,CALH;;EAME,oBACE;IAAA,UAGGG,IAAI,CAACC,GAAL,CAAS,CAACJ,GAAD,EAAMC,KAAN;IAAA;IACR;IACA;MAAA,wBACI;QAAA,UASDD;MATC;QAAA;QAAA;QAAA;MAAA,QADJ,eAaE;QAAQ,OAAO,EAAE,MAAMD,aAAa,CAACC,GAAD,EAAMC,KAAN,CAApC;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAbF;IAAA,GAASA,KAAT;MAAA;MAAA;MAAA;IAAA,QAFD;EAHH;IAAA;IAAA;IAAA;EAAA,QADF;AA0BL;;GApCQL,Q;;KAAAA,Q"},"metadata":{},"sourceType":"module"}